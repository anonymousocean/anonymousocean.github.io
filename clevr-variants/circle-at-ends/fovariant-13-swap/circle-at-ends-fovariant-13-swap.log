'/home/ubuntu/vdp-tool-chain-repo/data/output/CLEVR_circle-at-ends-fovariant-13-swap_scenes.json' -> '/home/ubuntu/vdp-tool-chain-repo/data/output/CLEVR_val_scenes.json'
'/home/ubuntu/vdp-tool-chain-repo/data/output/images/circle-at-ends-fovariant-13-swap/CLEVR_circle-at-ends-fovariant-13-swap_000005.png' -> '/home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_circle-at-ends-fovariant-13-swap_000005.png'
'/home/ubuntu/vdp-tool-chain-repo/data/output/images/circle-at-ends-fovariant-13-swap/CLEVR_circle-at-ends-fovariant-13-swap_000004.png' -> '/home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_circle-at-ends-fovariant-13-swap_000004.png'
'/home/ubuntu/vdp-tool-chain-repo/data/output/images/circle-at-ends-fovariant-13-swap/CLEVR_circle-at-ends-fovariant-13-swap_000002.png' -> '/home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_circle-at-ends-fovariant-13-swap_000002.png'
'/home/ubuntu/vdp-tool-chain-repo/data/output/images/circle-at-ends-fovariant-13-swap/CLEVR_circle-at-ends-fovariant-13-swap_000001.png' -> '/home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_circle-at-ends-fovariant-13-swap_000001.png'
'/home/ubuntu/vdp-tool-chain-repo/data/output/images/circle-at-ends-fovariant-13-swap/CLEVR_circle-at-ends-fovariant-13-swap_000000.png' -> '/home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_circle-at-ends-fovariant-13-swap_000000.png'
'/home/ubuntu/vdp-tool-chain-repo/data/output/images/circle-at-ends-fovariant-13-swap/CLEVR_circle-at-ends-fovariant-13-swap_000003.png' -> '/home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_circle-at-ends-fovariant-13-swap_000003.png'
/home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_circle-at-ends-fovariant-13-swap_000000.png renamed as /home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_val_000000.png
/home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_circle-at-ends-fovariant-13-swap_000001.png renamed as /home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_val_000001.png
/home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_circle-at-ends-fovariant-13-swap_000002.png renamed as /home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_val_000002.png
/home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_circle-at-ends-fovariant-13-swap_000003.png renamed as /home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_val_000003.png
/home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_circle-at-ends-fovariant-13-swap_000004.png renamed as /home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_val_000004.png
/home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_circle-at-ends-fovariant-13-swap_000005.png renamed as /home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_val_000005.png
'/home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_val_000000.png' -> '/home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/raw/CLEVR_v1.0/images/val/CLEVR_val_000000.png'
'/home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_val_000001.png' -> '/home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/raw/CLEVR_v1.0/images/val/CLEVR_val_000001.png'
'/home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_val_000002.png' -> '/home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/raw/CLEVR_v1.0/images/val/CLEVR_val_000002.png'
'/home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_val_000003.png' -> '/home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/raw/CLEVR_v1.0/images/val/CLEVR_val_000003.png'
'/home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_val_000004.png' -> '/home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/raw/CLEVR_v1.0/images/val/CLEVR_val_000004.png'
'/home/ubuntu/vdp-tool-chain-repo/data/output/images/val/CLEVR_val_000005.png' -> '/home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/raw/CLEVR_v1.0/images/val/CLEVR_val_000005.png'
'/home/ubuntu/vdp-tool-chain-repo/data/output/CLEVR_val_scenes.json' -> '/home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/raw/CLEVR_v1.0/scenes/CLEVR_val_scenes.json'
INFO test_net.py:  73: Called with args:
INFO test_net.py:  74: Namespace(cfg_file='configs/baselines/e2e_mask_rcnn_R-50-FPN_1x.yaml', clevr_comp_cat=1, dataset='clevr_original_val', load_ckpt='/home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/pretrained/object_detector.pt', load_detectron=None, multi_gpu_testing=False, output_dir='/home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/mask_rcnn/results/clevr_val_pretrained', range=None, set_cfgs=[], vis=False)
INFO test_net.py: 114: Testing with config:
INFO test_net.py: 115: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CLEVR': {'COMP_CAT': True},
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/mask_rcnn',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet50_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': True,
           'NUM_CLASSES': 49,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'MSRAFill',
           'DILATION': 1,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 28,
           'ROI_MASK_HEAD': 'mask_rcnn_heads.mask_rcnn_fcn_head_v1up4convs',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 14,
           'ROI_XFORM_SAMPLING_RATIO': 2,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'pretrained_model/resnet50_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/vdp-tool-chain-repo/clevr-inference/scene_parse/mask_rcnn',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 0.02,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 30000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 20000, 26000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('clevr_original_val',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1333,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 1000,
          'SCALE': 800,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5}},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_CONV_BODY': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1333,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (800,),
           'SNAPSHOT_ITERS': 20000,
           'USE_FLIPPED': False},
 'VIS': False,
 'VIS_TH': 0.9}
INFO test_engine.py: 331: loading checkpoint /home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/pretrained/object_detector.pt
INFO test_engine.py: 282: im_detect: range [1, 6] of 6: 1/6 0.990s + 0.003s (eta: 0:00:04)
INFO test_engine.py: 315: Wrote detections to: /home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/mask_rcnn/results/clevr_val_pretrained/detections.pkl
INFO test_engine.py: 162: Total inference time: 5.472s
/home/ubuntu/vdp-tool-chain-repo/clevr-inference/scene_parse/mask_rcnn/lib/core/config.py:1046: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.
  yaml_cfg = AttrDict(yaml.load(f))
| processing proposals 1 / 6 images
| processing proposals 2 / 6 images
| processing proposals 3 / 6 images
| processing proposals 4 / 6 images
| processing proposals 5 / 6 images
| processing proposals 6 / 6 images
| saving object annotations to /home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/attr_net/objects/clevr_val_objs_pretrained.json
| options
run_dir: /home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/attr_net/results
dataset: clevr
load_checkpoint_path: /home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/pretrained/attribute_net.pt
gpu_ids: [0]
clevr_mini_img_dir: /home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/raw/CLEVR_mini/images
clevr_mini_ann_path: /home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/attr_net/objects/clevr_mini_objs.json
concat_img: 1
split_id: 3500
batch_size: 50
num_workers: 4
learning_rate: 0.002
split: val
output_path: /home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/attr_net/results/clevr_val_scenes_parsed_pretrained.json
clevr_val_ann_path: /home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/attr_net/objects/clevr_val_objs_pretrained.json
clevr_val_img_dir: /home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/raw/CLEVR_v1.0/images/val
shuffle_data: 0
use_cat_label: 1
| loading checkpoint from /home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/pretrained/attribute_net.pt
clevr_object.py: CLEVR_val_000000.png val 0 0
clevr_object.py: CLEVR_val_000000.png val 0 1
clevr_object.py: CLEVR_val_000000.png val 0 2
clevr_object.py: CLEVR_val_000001.png val 1 3
clevr_object.py: CLEVR_val_000001.png val 1 4
clevr_object.py: CLEVR_val_000001.png val 1 5
clevr_object.py: CLEVR_val_000002.png val 2 6
clevr_object.py: CLEVR_val_000002.png val 2 7
clevr_object.py: CLEVR_val_000002.png val 2 8
clevr_object.py: CLEVR_val_000002.png val 2 9
clevr_object.py: CLEVR_val_000003.png val 3 10
clevr_object.py: CLEVR_val_000003.png val 3 11
clevr_object.py: CLEVR_val_000003.png val 3 12
clevr_object.py: CLEVR_val_000003.png val 3 13
clevr_object.py: CLEVR_val_000004.png val 4 14
clevr_object.py: CLEVR_val_000004.png val 4 15
clevr_object.py: CLEVR_val_000004.png val 4 16
clevr_object.py: CLEVR_val_000005.png val 5 17
clevr_object.py: CLEVR_val_000005.png val 5 18
clevr_object.py: CLEVR_val_000005.png val 5 19
20 / 20 objects processed
| saving annotation file to /home/ubuntu/vdp-tool-chain-repo/data/ns-vqa-data/attr_net/results/clevr_val_scenes_parsed_pretrained.json
0.json in test
THRESHOLD relate_front objs = {'id': '0-0', 'position': [-2.8112740516662598, -0.10989249497652054, 0.695858895778656], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}, {'id': '0-1', 'position': [2.9874584674835205, 0.17987090349197388, 0.6957118511199951], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}
THRESHOLD relate_front objs = {'id': '0-0', 'position': [-2.8112740516662598, -0.10989249497652054, 0.695858895778656], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}, {'id': '0-2', 'position': [0.09057418256998062, -0.08979886025190353, 0.695609986782074], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'large'}
THRESHOLD relate_behind objs = {'id': '0-1', 'position': [2.9874584674835205, 0.17987090349197388, 0.6957118511199951], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}, {'id': '0-0', 'position': [-2.8112740516662598, -0.10989249497652054, 0.695858895778656], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}
THRESHOLD relate_behind objs = {'id': '0-1', 'position': [2.9874584674835205, 0.17987090349197388, 0.6957118511199951], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}, {'id': '0-2', 'position': [0.09057418256998062, -0.08979886025190353, 0.695609986782074], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'large'}
THRESHOLD relate_behind objs = {'id': '0-2', 'position': [0.09057418256998062, -0.08979886025190353, 0.695609986782074], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'large'}, {'id': '0-0', 'position': [-2.8112740516662598, -0.10989249497652054, 0.695858895778656], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}
THRESHOLD relate_front objs = {'id': '0-2', 'position': [0.09057418256998062, -0.08979886025190353, 0.695609986782074], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'large'}, {'id': '0-1', 'position': [2.9874584674835205, 0.17987090349197388, 0.6957118511199951], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}
1.json in test
THRESHOLD relate_behind objs = {'id': '1-0', 'position': [-0.054528556764125824, 0.030949726700782776, 0.6919482946395874], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}, {'id': '1-2', 'position': [-2.8856630325317383, -0.18708562850952148, 0.7015549540519714], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'large'}
THRESHOLD relate_front objs = {'id': '1-0', 'position': [-0.054528556764125824, 0.030949726700782776, 0.6919482946395874], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}, {'id': '1-1', 'position': [2.775132417678833, 0.258676141500473, 0.6950356960296631], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}
THRESHOLD relate_behind objs = {'id': '1-1', 'position': [2.775132417678833, 0.258676141500473, 0.6950356960296631], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}, {'id': '1-0', 'position': [-0.054528556764125824, 0.030949726700782776, 0.6919482946395874], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}
THRESHOLD relate_front objs = {'id': '1-2', 'position': [-2.8856630325317383, -0.18708562850952148, 0.7015549540519714], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'large'}, {'id': '1-0', 'position': [-0.054528556764125824, 0.030949726700782776, 0.6919482946395874], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}
2.json in test
THRESHOLD relate_behind objs = {'id': '2-0', 'position': [0.08364550024271011, 3.61073762178421e-05, 0.3452202081680298], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'small'}, {'id': '2-1', 'position': [-2.840151309967041, -0.1867372989654541, 0.346684992313385], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'small'}
THRESHOLD relate_behind objs = {'id': '2-0', 'position': [0.08364550024271011, 3.61073762178421e-05, 0.3452202081680298], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'small'}, {'id': '2-2', 'position': [-1.4049280881881714, -0.07841185480356216, 0.34963056445121765], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}
THRESHOLD relate_front objs = {'id': '2-0', 'position': [0.08364550024271011, 3.61073762178421e-05, 0.3452202081680298], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'small'}, {'id': '2-3', 'position': [1.4125562906265259, 0.05713636428117752, 0.3481728434562683], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}
THRESHOLD relate_front objs = {'id': '2-1', 'position': [-2.840151309967041, -0.1867372989654541, 0.346684992313385], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'small'}, {'id': '2-0', 'position': [0.08364550024271011, 3.61073762178421e-05, 0.3452202081680298], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'small'}
THRESHOLD relate_front objs = {'id': '2-1', 'position': [-2.840151309967041, -0.1867372989654541, 0.346684992313385], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'small'}, {'id': '2-2', 'position': [-1.4049280881881714, -0.07841185480356216, 0.34963056445121765], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}
THRESHOLD relate_front objs = {'id': '2-1', 'position': [-2.840151309967041, -0.1867372989654541, 0.346684992313385], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'small'}, {'id': '2-3', 'position': [1.4125562906265259, 0.05713636428117752, 0.3481728434562683], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}
THRESHOLD relate_behind objs = {'id': '2-2', 'position': [-1.4049280881881714, -0.07841185480356216, 0.34963056445121765], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}, {'id': '2-1', 'position': [-2.840151309967041, -0.1867372989654541, 0.346684992313385], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'small'}
THRESHOLD relate_front objs = {'id': '2-2', 'position': [-1.4049280881881714, -0.07841185480356216, 0.34963056445121765], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}, {'id': '2-0', 'position': [0.08364550024271011, 3.61073762178421e-05, 0.3452202081680298], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'small'}
THRESHOLD relate_front objs = {'id': '2-2', 'position': [-1.4049280881881714, -0.07841185480356216, 0.34963056445121765], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}, {'id': '2-3', 'position': [1.4125562906265259, 0.05713636428117752, 0.3481728434562683], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}
THRESHOLD relate_behind objs = {'id': '2-3', 'position': [1.4125562906265259, 0.05713636428117752, 0.3481728434562683], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}, {'id': '2-0', 'position': [0.08364550024271011, 3.61073762178421e-05, 0.3452202081680298], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'small'}
THRESHOLD relate_behind objs = {'id': '2-3', 'position': [1.4125562906265259, 0.05713636428117752, 0.3481728434562683], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}, {'id': '2-1', 'position': [-2.840151309967041, -0.1867372989654541, 0.346684992313385], 'color': 'blue', 'material': 'metal', 'shape': 'cylinder', 'size': 'small'}
THRESHOLD relate_behind objs = {'id': '2-3', 'position': [1.4125562906265259, 0.05713636428117752, 0.3481728434562683], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}, {'id': '2-2', 'position': [-1.4049280881881714, -0.07841185480356216, 0.34963056445121765], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}
3.json in train
THRESHOLD relate_front objs = {'id': '3-0', 'position': [-2.7605032920837402, -0.26987558603286743, 0.3503808379173279], 'color': 'brown', 'material': 'rubber', 'shape': 'cylinder', 'size': 'small'}, {'id': '3-1', 'position': [1.3727645874023438, 0.03414423391222954, 0.35136592388153076], 'color': 'gray', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}
THRESHOLD relate_front objs = {'id': '3-0', 'position': [-2.7605032920837402, -0.26987558603286743, 0.3503808379173279], 'color': 'brown', 'material': 'rubber', 'shape': 'cylinder', 'size': 'small'}, {'id': '3-2', 'position': [-1.4111098051071167, -0.08904574811458588, 0.35263121128082275], 'color': 'gray', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}
THRESHOLD relate_behind objs = {'id': '3-1', 'position': [1.3727645874023438, 0.03414423391222954, 0.35136592388153076], 'color': 'gray', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}, {'id': '3-0', 'position': [-2.7605032920837402, -0.26987558603286743, 0.3503808379173279], 'color': 'brown', 'material': 'rubber', 'shape': 'cylinder', 'size': 'small'}
THRESHOLD relate_behind objs = {'id': '3-1', 'position': [1.3727645874023438, 0.03414423391222954, 0.35136592388153076], 'color': 'gray', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}, {'id': '3-2', 'position': [-1.4111098051071167, -0.08904574811458588, 0.35263121128082275], 'color': 'gray', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}
THRESHOLD relate_front objs = {'id': '3-1', 'position': [1.3727645874023438, 0.03414423391222954, 0.35136592388153076], 'color': 'gray', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}, {'id': '3-3', 'position': [2.8763482570648193, 0.1417159140110016, 0.6933988928794861], 'color': 'purple', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}
THRESHOLD relate_behind objs = {'id': '3-2', 'position': [-1.4111098051071167, -0.08904574811458588, 0.35263121128082275], 'color': 'gray', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}, {'id': '3-0', 'position': [-2.7605032920837402, -0.26987558603286743, 0.3503808379173279], 'color': 'brown', 'material': 'rubber', 'shape': 'cylinder', 'size': 'small'}
THRESHOLD relate_front objs = {'id': '3-2', 'position': [-1.4111098051071167, -0.08904574811458588, 0.35263121128082275], 'color': 'gray', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}, {'id': '3-1', 'position': [1.3727645874023438, 0.03414423391222954, 0.35136592388153076], 'color': 'gray', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}
THRESHOLD relate_front objs = {'id': '3-2', 'position': [-1.4111098051071167, -0.08904574811458588, 0.35263121128082275], 'color': 'gray', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}, {'id': '3-3', 'position': [2.8763482570648193, 0.1417159140110016, 0.6933988928794861], 'color': 'purple', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}
THRESHOLD relate_behind objs = {'id': '3-3', 'position': [2.8763482570648193, 0.1417159140110016, 0.6933988928794861], 'color': 'purple', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}, {'id': '3-1', 'position': [1.3727645874023438, 0.03414423391222954, 0.35136592388153076], 'color': 'gray', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}
THRESHOLD relate_behind objs = {'id': '3-3', 'position': [2.8763482570648193, 0.1417159140110016, 0.6933988928794861], 'color': 'purple', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}, {'id': '3-2', 'position': [-1.4111098051071167, -0.08904574811458588, 0.35263121128082275], 'color': 'gray', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}
4.json in train
THRESHOLD relate_front objs = {'id': '4-0', 'position': [0.06495459377765656, -0.09208556264638901, 0.6957339644432068], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'large'}, {'id': '4-1', 'position': [2.172132968902588, 0.1411246359348297, 0.3465677499771118], 'color': 'purple', 'material': 'rubber', 'shape': 'cylinder', 'size': 'small'}
THRESHOLD relate_front objs = {'id': '4-0', 'position': [0.06495459377765656, -0.09208556264638901, 0.6957339644432068], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'large'}, {'id': '4-2', 'position': [-2.092869758605957, -0.09169607609510422, 0.35075709223747253], 'color': 'purple', 'material': 'rubber', 'shape': 'cylinder', 'size': 'small'}
THRESHOLD relate_behind objs = {'id': '4-1', 'position': [2.172132968902588, 0.1411246359348297, 0.3465677499771118], 'color': 'purple', 'material': 'rubber', 'shape': 'cylinder', 'size': 'small'}, {'id': '4-0', 'position': [0.06495459377765656, -0.09208556264638901, 0.6957339644432068], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'large'}
THRESHOLD relate_behind objs = {'id': '4-1', 'position': [2.172132968902588, 0.1411246359348297, 0.3465677499771118], 'color': 'purple', 'material': 'rubber', 'shape': 'cylinder', 'size': 'small'}, {'id': '4-2', 'position': [-2.092869758605957, -0.09169607609510422, 0.35075709223747253], 'color': 'purple', 'material': 'rubber', 'shape': 'cylinder', 'size': 'small'}
THRESHOLD relate_behind objs = {'id': '4-2', 'position': [-2.092869758605957, -0.09169607609510422, 0.35075709223747253], 'color': 'purple', 'material': 'rubber', 'shape': 'cylinder', 'size': 'small'}, {'id': '4-0', 'position': [0.06495459377765656, -0.09208556264638901, 0.6957339644432068], 'color': 'blue', 'material': 'metal', 'shape': 'sphere', 'size': 'large'}
THRESHOLD relate_front objs = {'id': '4-2', 'position': [-2.092869758605957, -0.09169607609510422, 0.35075709223747253], 'color': 'purple', 'material': 'rubber', 'shape': 'cylinder', 'size': 'small'}, {'id': '4-1', 'position': [2.172132968902588, 0.1411246359348297, 0.3465677499771118], 'color': 'purple', 'material': 'rubber', 'shape': 'cylinder', 'size': 'small'}
5.json in train
THRESHOLD relate_front objs = {'id': '5-0', 'position': [-1.9006937742233276, -0.18804773688316345, 0.6990727186203003], 'color': 'brown', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}, {'id': '5-1', 'position': [2.2161052227020264, -0.009166568517684937, 0.6974506974220276], 'color': 'brown', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}
THRESHOLD relate_front objs = {'id': '5-0', 'position': [-1.9006937742233276, -0.18804773688316345, 0.6990727186203003], 'color': 'brown', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}, {'id': '5-2', 'position': [0.22945469617843628, -0.14304473996162415, 0.3531215786933899], 'color': 'brown', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}
THRESHOLD relate_behind objs = {'id': '5-1', 'position': [2.2161052227020264, -0.009166568517684937, 0.6974506974220276], 'color': 'brown', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}, {'id': '5-0', 'position': [-1.9006937742233276, -0.18804773688316345, 0.6990727186203003], 'color': 'brown', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}
THRESHOLD relate_behind objs = {'id': '5-1', 'position': [2.2161052227020264, -0.009166568517684937, 0.6974506974220276], 'color': 'brown', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}, {'id': '5-2', 'position': [0.22945469617843628, -0.14304473996162415, 0.3531215786933899], 'color': 'brown', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}
THRESHOLD relate_behind objs = {'id': '5-2', 'position': [0.22945469617843628, -0.14304473996162415, 0.3531215786933899], 'color': 'brown', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}, {'id': '5-0', 'position': [-1.9006937742233276, -0.18804773688316345, 0.6990727186203003], 'color': 'brown', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}
THRESHOLD relate_front objs = {'id': '5-2', 'position': [0.22945469617843628, -0.14304473996162415, 0.3531215786933899], 'color': 'brown', 'material': 'metal', 'shape': 'sphere', 'size': 'small'}, {'id': '5-1', 'position': [2.2161052227020264, -0.009166568517684937, 0.6974506974220276], 'color': 'brown', 'material': 'metal', 'shape': 'cylinder', 'size': 'large'}
2021-06-04 07:35:25.051139: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA
2021-06-04 07:35:25.142188: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:964] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-06-04 07:35:25.142959: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1432] Found device 0 with properties: 
name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235
pciBusID: 0000:00:1e.0
totalMemory: 11.17GiB freeMemory: 11.11GiB
2021-06-04 07:35:25.142984: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1511] Adding visible gpu devices: 0
2021-06-04 07:35:25.433863: I tensorflow/core/common_runtime/gpu/gpu_device.cc:982] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-06-04 07:35:25.433912: I tensorflow/core/common_runtime/gpu/gpu_device.cc:988]      0 
2021-06-04 07:35:25.433922: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1001] 0:   N 
2021-06-04 07:35:25.434047: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10769 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:00:1e.0, compute capability: 3.7)
Using TensorFlow backend.
/home/ubuntu/anaconda3/envs/deep-ranking/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:523: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/ubuntu/anaconda3/envs/deep-ranking/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:524: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/ubuntu/anaconda3/envs/deep-ranking/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/ubuntu/anaconda3/envs/deep-ranking/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:526: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/ubuntu/anaconda3/envs/deep-ranking/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:527: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/ubuntu/anaconda3/envs/deep-ranking/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:532: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
